import streamlit as st
import altair as alt
import pandas as pd
from db.tables import GET_ALL_FILES, GET_ALL_USERS, PER_USER_COUNT, PER_FILE_TYPE_COUNT
import pandas as pd
import sqlite3
import os

# page configs
st.set_page_config(page_title="Statistics",  page_icon="üßä",  layout="wide",)

st.markdown("""
<style>
[data-testid="stSidebar"] {
    display: none;
}
</style>
""", unsafe_allow_html=True)

home_page = "pages/app.py"
st.page_link(home_page, label="Back", icon="‚óÄÔ∏è")


# main


col1, col2 = st.columns(2)

with col1:
    st.subheader('Per user file upload chart')
    conn = sqlite3.connect('database.db')
    cursor = conn.cursor()

    # Execute the query
    cursor.execute(PER_USER_COUNT)
    results = cursor.fetchall()
    user_file_counts = {}
    for row in results:
        username, record_count = row
        user_file_counts[username] = record_count

    st.line_chart(user_file_counts)
    conn.close()


with col2:
    st.subheader('Per day file type chart')

    conn = sqlite3.connect('database.db')
    cursor = conn.cursor()
    cursor.execute(PER_FILE_TYPE_COUNT)
    results = cursor.fetchall()

    data = []
    for row in results:
        date, total_states, virus_files, benign_files = row
        data.append({
            "date": date,
            "total_states": total_states,
            "virus_files": virus_files,
            "benign_files": benign_files
        })
    conn.close()
    df = pd.DataFrame(data)

    # Set the date column as the index
    df.set_index('date', inplace=True)

    # Display bar chart
    st.bar_chart(df)

st.divider()

st.subheader("Uploaded Safe files")

conn = sqlite3.connect('database.db')
files_all_df = pd.read_sql_query(GET_ALL_FILES, conn)
files_all_df = files_all_df.to_dict(orient="records")
for file in files_all_df:
    with st.container():
        mkd = f"""
    <div style="display: flex; justify-content: space-evenly; align-items: center;">
        <svg style="color: orange;" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" width="45" height="45" fill="currentColor" viewBox="0 0 24 24">
            <path fill-rule="evenodd" d="M9 2.221V7H4.221a2 2 0 0 1.365-.5L8.5 2.586A2 2 0 0 1 9 2.22ZM11 2v5a2 2 0 0 1-2 2H4v11a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V4a2 2 0 0 0-2-2h-7Z" clip-rule="evenodd"/>
        </svg>
        <span style="color: gray; font-size: 14px;"> file name <br> <b style="color: black; font-size: 18px;"> {file['file_name']}  </b> </span>
        <span style="color: gray; font-size: 14px;">uploaded by <br> <b style="color: black; font-size: 18px;"> {file['username']}  </b> </span>
        <details style="display: inline; color: gray; font-size: 14px;">
            <summary>Check File Path</summary>
                <p>{file['file_url']}</p>
        </details>
    </div>
    """
        
        st.markdown(mkd, unsafe_allow_html=True)
        st.html("<hr>")


st.subheader("Active users")

users_all_df = pd.read_sql_query(GET_ALL_USERS, conn)
st.write(users_all_df)
# Close the connection
conn.close()
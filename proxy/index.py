import streamlit as st
from streamlit_modal import Modal
import sqlite3

from services.helpers import create_acc, login_acc, initializeTables

# Create a SQLite database
initializeTables()
conn = sqlite3.connect('database.db')
cursor = conn.cursor()

# Set page configuration
st.set_page_config(page_title="Authentication", layout="wide")
home_page = "pages/app.py"
if 'username' in st.session_state:
    st.write("FOund it")
    st.switch_page(home_page)

# Add CSS to hide the sidebar
st.markdown("""
<style>
[data-testid="stSidebar"] {
    display: none;
}
</style>
""", unsafe_allow_html=True)
st.markdown("""
<style>
.box-column{
    margin-bottom: 30px;
}
</style>
""", unsafe_allow_html=True)

# st.page_link("pages/app.py", label="Home", icon="üè†")

modal = Modal(
    "Sign Up !",
    key="registration-modal",

    # Optional
    padding=20,    # default value
    max_width=744  # default value

)

col1, col2, col3 = st.columns(3)

with col1:
    st.write(' ')

with col2:
    col2.subheader("Login")
    st.write("Please log in or register to continue")

    with st.form("my_form"):
        username = st.text_input("Username", placeholder="example@server")
        password = st.text_input("Password", type="password")

        submitted = st.form_submit_button(
            "Submit", use_container_width=True, type="primary")

        if submitted:
            if(login_acc(username, password)):
                st.session_state['username'] = username
                st.switch_page(home_page)
            else:
                st.markdown("""
                    <p style="color: red;">Password or Username incorrect</p>
                    """, unsafe_allow_html=True)

    open_modal = st.button("Sign Up Instead", use_container_width=True)

with col3:
    st.write(' ')

# --------------------------- modal and form checking -------------------------------

if open_modal:
    modal.open()

if modal.is_open():
    with modal.container():
        with st.form("registration_form"):
            # Add a text input
            username = st.text_input(
                "Username", placeholder="example@server.random")
            password = st.text_input("Password", type="password")
            confirm_password = st.text_input(
                "Re-type password", type="password")

            # Add a submit button
            submitted = st.form_submit_button(
                "Submit", use_container_width=True, type="primary")

            # Check if the form is submitted
            if submitted:
                if not password:
                    st.markdown("""
                    <p style="color: red;">Please input password and retype password !</p>
                    """, unsafe_allow_html=True)
                elif password != confirm_password:
                    st.markdown("""
                    <p style="color: red;">Passwords do not match!</p>
                    """, unsafe_allow_html=True)
                elif not username:
                    st.markdown("""
                    <p style="color: red;">You need to input a username</p>
                    """, unsafe_allow_html=True)

                elif username and password:
                    cursor.execute(
                        "SELECT * FROM users WHERE username = ?", (username,))
                    result = cursor.fetchone()
                    if result:
                        st.markdown("""
                            <p style="color: red;">This Username is already taken üòû</p>
                        """, unsafe_allow_html=True)
                    else:
                        create_acc(username, password)
                        if 'username' not in st.session_state:
                            st.session_state['username'] = username
                            st.switch_page(home_page)
                        modal.close()
